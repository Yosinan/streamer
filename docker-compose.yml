services:
  api:
    build:
      context: ./api
    container_name: laravel_api
    working_dir: /var/www
    restart: unless-stopped
    command: php artisan serve --host=0.0.0.0 --port=9000
    volumes:
      - ./api:/var/www
    ports:
      - "8000:9000"
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://streamer.yosinan.tech
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=video
      - DB_USERNAME=video_user
      - DB_PASSWORD=video_password
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.api.rule=Host(`api.streamer.yosinan.tech`)"
      - "traefik.http.routers.api.entrypoints=websecure"
      - "traefik.http.routers.api.tls.certresolver=cloudflare"
      - "traefik.http.services.api.loadbalancer.server.port=9000"
    depends_on:
      - db
    networks:
      - app_net

  worker:
    build:
      context: ./api
    container_name: laravel_worker
    working_dir: /var/www
    command: php artisan queue:work --verbose --tries=3 --timeout=90
    volumes:
      - ./api:/var/www
    environment:
      - APP_ENV=production
      - APP_DEBUG=false
      - APP_URL=https://api.streamer.yosinan.tech
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=video
      - DB_USERNAME=video_user
      - DB_PASSWORD=video_password
      - QUEUE_CONNECTION=redis
    depends_on:
      - db
    networks:
      - app_net
      
  redis:
    image: redis:alpine
    container_name: streamer_redis
    restart: unless-stopped
    networks:
      - app_net

  client:
    build:
      context: ./client
    container_name: next_client
    working_dir: /app
    volumes:
      - ./client:/app
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.client.rule=Host(`streamer.yosinan.tech`)"
      - "traefik.http.routers.client.entrypoints=websecure"
      - "traefik.http.routers.client.tls.certresolver=cloudflare"
      - "traefik.http.services.client.loadbalancer.server.port=3000"

  db:
    image: postgres:17-alpine
    restart: unless-stopped
    environment:
      POSTGRES_DB: 'video' 
      POSTGRES_USER: 'video_user'
      POSTGRES_PASSWORD: 'video_password'
    volumes:
      - db_data:/var/lib/postgresql/data
      - ./backups:/backups
    networks:
      - app_net
volumes:
  db_data:

networks:
  app_net:
    external: true
